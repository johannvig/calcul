trigger:
- main

pool: 'default'

variables: # Variables globales importantes
  resourceGroupName: 'T2CP'
  rgLocation: 'Canada Central'
  AzureAppInfrastructure: 'azure_deploy'
  function1FolderName: 'function1'
  function2FolderName: 'function2'
  functionappname: 'devoirgurofunctionapp'

stages:
- stage: Infra
  displayName: Infrastructure Deployment
  jobs:
  - job: Deploy
    displayName: Deploy Infrastructure
    steps:
    - script: |
        echo "Validating azuredeploy.json"
        jq . $(Build.SourcesDirectory)/azure_deploy/azuredeploy.json
        echo "Validating azuredeploy.parameters.json"
        jq . $(Build.SourcesDirectory)/azure_deploy/azuredeploy.parameters.json
      displayName: 'Validate JSON Files'

    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'Azure subscription 1(2)(4752c137-48fe-4a21-ac6e-435c1d51dbe9)'
        subscriptionId: '4752c137-48fe-4a21-ac6e-435c1d51dbe9'
        action: 'Create Or Update Resource Group'
        resourceGroupName: '$(resourceGroupName)'
        location: '$(rgLocation)'
        templateLocation: 'Linked artifact'
        csmFile: '$(Build.SourcesDirectory)/azure_deploy/azuredeploy.json'
        csmParametersFile: '$(Build.SourcesDirectory)/azure_deploy/azuredeploy.parameters.json'
        deploymentMode: 'Incremental'
        deploymentName: 'MainDeployment'
        deploymentOutputs: 'deploymentOutputs'
      name: DeployARM
      displayName: 'Deploy ARM Templates and Capture Outputs'

    - script: |
        echo "##vso[task.setvariable variable=storageAccountConnectionString;isOutput=true]$(deploymentOutputs.storageAccountConnectionString.value)"
        echo "##vso[task.setvariable variable=serviceBusConnectionString;isOutput=true]$(deploymentOutputs.serviceBusConnectionString.value)"
      name: setOutputs
      displayName: 'Expose ARM deployment outputs as pipeline variables'

    - script: |
        echo "Debugging captured deployment outputs:"
        echo "Storage Account Connection String: $(deploymentOutputs.storageAccountConnectionString.value)"
        echo "Service Bus Connection String: $(deploymentOutputs.serviceBusConnectionString.value)"
      displayName: 'Debug Deployment Outputs'

- stage: DeployFunctions
  displayName: Deploy Azure Functions
  dependsOn: Infra
  variables:
    storageAccountConnectionString2: $[ dependencies.Infra.outputs['DeployARM.setOutputs.storageAccountConnectionString'] ]
    serviceBusConnectionString2: $[ dependencies.Infra.outputs['DeployARM.setOutputs.serviceBusConnectionString'] ]
  jobs:
  - job: DeployFunction1
    displayName: Deploy Function1
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '8.0.x'
      displayName: 'Install .NET SDK 8.0'

    - script: |
        echo "Updating local.settings.json for Function1"
        jq ".Values.AzureWebJobsStorage = \"$(storageAccountConnectionString2)\"" "$(Build.SourcesDirectory)/$(function1FolderName)/local.settings.json" > "$(Build.SourcesDirectory)/$(function1FolderName)/local.settings.json.tmp"
        jq ".Values.ServiceBusConnectionString = \"$(serviceBusConnectionString2)\"" "$(Build.SourcesDirectory)/$(function1FolderName)/local.settings.json.tmp" > "$(Build.SourcesDirectory)/$(function1FolderName)/local.settings.json"
        del "$(Build.SourcesDirectory)/$(function1FolderName)/local.settings.json.tmp"
      displayName: 'Update Function1 local.settings.json'

    - script: |
        cd $(Build.SourcesDirectory)/$(function1FolderName)
        dotnet publish -o $(Build.ArtifactStagingDirectory)/function1
      displayName: 'Publish Function1'

    - task: AzureFunctionApp@1
      inputs:
        azureSubscription: 'Azure subscription 1(2)(4752c137-48fe-4a21-ac6e-435c1d51dbe9)'
        appType: 'functionApp'
        appName: $(functionappname)
        package: '$(Build.ArtifactStagingDirectory)/function1'
      displayName: 'Deploy Function1'

  - job: DeployFunction2
    displayName: Deploy Function2
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '8.0.x'
      displayName: 'Install .NET SDK 8.0'

    - script: |
        echo "Updating local.settings.json for Function2"
        jq ".Values.AzureWebJobsStorage = \"$(storageAccountConnectionString2)\"" "$(Build.SourcesDirectory)/$(function2FolderName)/local.settings.json" > "$(Build.SourcesDirectory)/$(function2FolderName)/local.settings.json.tmp"
        jq ".Values.ServiceBusConnectionString = \"$(serviceBusConnectionString2)\"" "$(Build.SourcesDirectory)/$(function2FolderName)/local.settings.json.tmp" > "$(Build.SourcesDirectory)/$(function2FolderName)/local.settings.json"
        del "$(Build.SourcesDirectory)/$(function2FolderName)/local.settings.json.tmp"
      displayName: 'Update Function2 local.settings.json'

    - script: |
        cd $(Build.SourcesDirectory)/$(function2FolderName)
        dotnet publish -o $(Build.ArtifactStagingDirectory)/function2
      displayName: 'Publish Function2'

    - task: AzureFunctionApp@1
      inputs:
        azureSubscription: 'Azure subscription 1(2)(4752c137-48fe-4a21-ac6e-435c1d51dbe9)'
        appType: 'functionApp'
        appName: $(functionappname)
        package: '$(Build.ArtifactStagingDirectory)/function2'
      displayName: 'Deploy Function2'
